"use strict";

// Операторы в js
//  ++++ - обычный плюс используется для сложения строк,строк и числа,но на выходе получается строковый тип данных, то есть строка.
console.log('arr' + ' - object');
console.log(4 + ' - object');
// унарный + ставиться перед чем то (определенным аргументом) чтобы преправить в числовой тип данных.
console.log(4 + +'4');

// ниже постфиксная записиь дикримента и инкримента
// Инкримент, то есть увелечение на еденицу.
let incr = 10;
incr++
console.log(incr);
// Дикримент, то есть уменьшение на еденицу.
let decr = 10;
decr--;
console.log(decr);
// При такой записи вычисление идут после значения.На примере как это выглядит.
// Постфиксная форма записи сначала возращает старое значение,а потом делает вычесления.
console.log(incr--);
console.log(decr--);
// Мы увидим что значения не изменились т.к  вычисления идут после вывода,а уже следующий вывод покажет верный ответ.
console.log(incr);
console.log(decr);

// Префиксной формой называется тогда когда инкримент или дикримент идут перед значением;
// Соответсвенно выполняются они до возвращения значения,например в консоль.
++incr;
--decr;
console.log(incr);
console.log(decr);
// Сответственно при аналогии с подфиксной записью вычисления идут до вывода в консоль.
console.log(++incr);
console.log(--decr);

// Также существуют операторы 
//  Больше <
// Меньше >
//Равно = 

// И оператор парацент % - он выводит остаток от деления
console.log(5%2);
// Также существует три типа равенства
//  Одинарное = это присвоение
let ravno = 5;
// Чтобы сравнить нужно использовать два равно ==
console.log(5 == 5);
console.log(5 == '5');
// При этом будет выводиться булевое значение true или false.Которое не учитывает тип данных,а учитывает только значение.
// И есть строгое равенство === , котторое уже учитывает тип данных
console.log(5 === '5');

// Логические операторы 

// Оператор и &&
// Операто или ||

const isChecked = true,
		isClose = true;
console.log(isChecked && isClose);